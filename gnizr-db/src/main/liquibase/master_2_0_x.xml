<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog logicalFilePath="classpath:/master_2_0_x.xml"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

    <changeSet id="create-schema" author="vrebesbyrd@gmail.com">
        <sql>
            -- Converted by db_converter
            START TRANSACTION;
            SET standard_conforming_strings=off;
            SET escape_string_warning=off;
            SET NAMES 'utf8'
            SET CONSTRAINTS ALL DEFERRED;

            CREATE TABLE "bookmark" (
            "id" integer  NOT NULL,
            "user_id" integer  NOT NULL,
            "link_id" integer  NOT NULL,
            "title" text  NOT NULL,
            "notes" text  NOT NULL,
            "created_on" timestamp with time zone NOT NULL,
            "last_updated" timestamp with time zone NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("user_id","link_id")
            );

            CREATE TABLE "bookmark_folder" (
            "id" integer  NOT NULL,
            "bookmark_id" integer  NOT NULL,
            "folder_id" integer  NOT NULL,
            "last_updated" timestamp with time zone NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("bookmark_id","folder_id")
            );

            CREATE TABLE "bookmark_point_marker_idx" (
            "bookmark_id" integer  NOT NULL,
            "point_marker_id" integer  NOT NULL,
            PRIMARY KEY  ("bookmark_id","point_marker_id")
            );

            CREATE TABLE "bookmark_tag_idx" (
            "id" integer  NOT NULL,
            "bookmark_id" integer  NOT NULL,
            "tag_id" integer  NOT NULL,
            "count" integer  NOT NULL,
            "position" int2  NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("bookmark_id","tag_id")
            );

            CREATE TABLE "feed_folder" (
            "id" integer  NOT NULL,
            "feed_id" integer  NOT NULL,
            "folder_id" integer  NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("feed_id","folder_id")
            );

            CREATE TABLE "feed_subscription" (
            "id" integer  NOT NULL,
            "bookmark_id" integer  NOT NULL COMMENT 'ref a bmark that defines a RSS feed',
            "last_sync" timestamp with time zone default NULL COMMENT 'when was the last time that this feed was read',
            "match_text" text  NOT NULL COMMENT 'space-delimited tag labels that a bmark importer will use to match feed entries that should imported as bookmarks',
            "auto_import" int4 NOT NULL default '1',
            "pub_date" timestamp with time zone default NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("bookmark_id")
            );

            CREATE TABLE "folder" (
            "id" integer  NOT NULL,
            "folder_name" varchar(90)  NOT NULL,
            "owner_id" integer  NOT NULL,
            "description" text  NOT NULL,
            "last_updated" timestamp with time zone NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("folder_name","owner_id")
            );

            CREATE TABLE "folder_tag_idx" (
            "folder_id" integer  NOT NULL,
            "tag_id" integer  NOT NULL,
            "count" integer  NOT NULL,
            PRIMARY KEY  ("folder_id","tag_id")
            );

            CREATE TABLE "for_user" (
            "id" integer  NOT NULL,
            "for_user_id" integer  NOT NULL,
            "bookmark_id" integer  NOT NULL,
            "message" text NOT NULL,
            "created_on" timestamp with time zone NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("for_user_id","bookmark_id")
            );

            CREATE TABLE "link" (
            "id" integer  NOT NULL,
            "mime_type_id" integer  default NULL,
            "url" text NOT NULL,
            "url_hash" varchar(90) NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("url_hash")
            );

            CREATE TABLE "link_tag_idx" (
            "id" integer  NOT NULL,
            "link_id" integer  NOT NULL,
            "tag_id" integer  NOT NULL,
            "count" integer  zerofill NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("link_id","tag_id")
            );

            CREATE TABLE "mime_type_admin" (
            "id" integer  NOT NULL default '0',
            "mime_type" varchar(90) NOT NULL,
            "label" varchar(200) NOT NULL,
            PRIMARY KEY  ("id")
            );

            CREATE TABLE "point_marker" (
            "id" integer  NOT NULL,
            "geom" point NOT NULL,
            "notes" varchar(510) NOT NULL,
            "icon_id" tinyint(3)  NOT NULL default '0',
            PRIMARY KEY  ("id")
            );

            CREATE TABLE "search_idx" (
            "bookmark_id" integer  NOT NULL,
            "text" text NOT NULL,
            "tags" text NOT NULL,
            PRIMARY KEY  ("bookmark_id")
            );

            CREATE TABLE "tag" (
            "id" integer  NOT NULL,
            "tag" varchar(90)  NOT NULL,
            "count" integer  zerofill NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("tag")
            );

            CREATE TABLE "tag_assertion" (
            "id" integer  NOT NULL,
            "subject_id" integer  NOT NULL,
            "prpt_id" integer  NOT NULL,
            "object_id" integer  NOT NULL,
            "user_id" integer  NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("subject_id","prpt_id","object_id","user_id")
            );

            CREATE TYPE tag_prpt_prpt_type AS ENUM ('spatial','temporal','system','reference','default');
            CREATE TABLE "tag_prpt" (
            "id" integer  NOT NULL,
            "name" varchar(90) NOT NULL,
            "ns_prefix" varchar(20) NOT NULL default 'gn',
            "description" varchar(510) default NULL,
            "prpt_type" tag_prpt_prpt_type NOT NULL default 'default',
            "cardinality" integer NOT NULL default '-1',
            PRIMARY KEY  ("id"),
            UNIQUE ("name","ns_prefix")
            );

            CREATE TABLE "user" (
            "id" integer  NOT NULL,
            "username" varchar(90) NOT NULL,
            "password" varchar(90) NOT NULL,
            "fullname" varchar(200) NOT NULL,
            "created_on" timestamp with time zone NOT NULL,
            "email" varchar(100) NOT NULL,
            "acct_status" integer  zerofill NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("username")
            );

            CREATE TABLE "user_tag_idx" (
            "id" integer  NOT NULL,
            "user_id" integer  NOT NULL,
            "tag_id" integer  NOT NULL,
            "count" integer  zerofill NOT NULL,
            PRIMARY KEY  ("id"),
            UNIQUE ("user_id","tag_id")
            );


            -- Post-data save --
            COMMIT;
            START TRANSACTION;

            -- Typecasts --
            ALTER TABLE "feed_subscription" ALTER COLUMN "auto_import" DROP DEFAULT, ALTER COLUMN "auto_import" TYPE boolean USING CAST("auto_import" as boolean);

            -- Foreign keys --
            ALTER TABLE "bookmark" ADD CONSTRAINT "FK_bookmark_1" FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark" ("user_id");
            ALTER TABLE "bookmark" ADD CONSTRAINT "FK_bookmark_2" FOREIGN KEY ("link_id") REFERENCES "link" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark" ("link_id");
            ALTER TABLE "bookmark_folder" ADD CONSTRAINT "FK_bookmark_folder_1" FOREIGN KEY ("bookmark_id") REFERENCES "bookmark" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark_folder" ("bookmark_id");
            ALTER TABLE "bookmark_folder" ADD CONSTRAINT "FK_bookmark_folder_2" FOREIGN KEY ("folder_id") REFERENCES "folder" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark_folder" ("folder_id");
            ALTER TABLE "bookmark_point_marker_idx" ADD CONSTRAINT "FK_bookmark_point_mark_idx_1" FOREIGN KEY ("bookmark_id") REFERENCES "bookmark" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark_point_marker_idx" ("bookmark_id");
            ALTER TABLE "bookmark_tag_idx" ADD CONSTRAINT "FK_bookmark_tag_idx_1" FOREIGN KEY ("bookmark_id") REFERENCES "bookmark" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark_tag_idx" ("bookmark_id");
            ALTER TABLE "bookmark_tag_idx" ADD CONSTRAINT "FK_bookmark_tag_idx_2" FOREIGN KEY ("tag_id") REFERENCES "tag" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "bookmark_tag_idx" ("tag_id");
            ALTER TABLE "feed_folder" ADD CONSTRAINT "FK_feed_folder_1" FOREIGN KEY ("feed_id") REFERENCES "feed_subscription" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "feed_folder" ("feed_id");
            ALTER TABLE "feed_folder" ADD CONSTRAINT "FK_feed_folder_2" FOREIGN KEY ("folder_id") REFERENCES "folder" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "feed_folder" ("folder_id");
            ALTER TABLE "feed_subscription" ADD CONSTRAINT "FK_feed_subscription_1" FOREIGN KEY ("bookmark_id") REFERENCES "bookmark" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "feed_subscription" ("bookmark_id");
            ALTER TABLE "folder" ADD CONSTRAINT "FK_folder_admin_1" FOREIGN KEY ("owner_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "folder" ("owner_id");
            ALTER TABLE "folder_tag_idx" ADD CONSTRAINT "FK_folder_tag_idx_1" FOREIGN KEY ("folder_id") REFERENCES "folder" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "folder_tag_idx" ("folder_id");
            ALTER TABLE "folder_tag_idx" ADD CONSTRAINT "FK_folder_tag_idx_2" FOREIGN KEY ("tag_id") REFERENCES "tag" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "folder_tag_idx" ("tag_id");
            ALTER TABLE "for_user" ADD CONSTRAINT "FK_for_user_1" FOREIGN KEY ("for_user_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "for_user" ("for_user_id");
            ALTER TABLE "for_user" ADD CONSTRAINT "FK_for_user_2" FOREIGN KEY ("bookmark_id") REFERENCES "bookmark" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "for_user" ("bookmark_id");
            ALTER TABLE "link" ADD CONSTRAINT "FK_link_1" FOREIGN KEY ("mime_type_id") REFERENCES "mime_type_admin" ("id") ON DELETE SET NULL ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "link" ("mime_type_id");
            ALTER TABLE "link_tag_idx" ADD CONSTRAINT "FK_link_tag_idx_1" FOREIGN KEY ("link_id") REFERENCES "link" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "link_tag_idx" ("link_id");
            ALTER TABLE "link_tag_idx" ADD CONSTRAINT "FK_link_tag_idx_2" FOREIGN KEY ("tag_id") REFERENCES "tag" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "link_tag_idx" ("tag_id");
            ALTER TABLE "tag_assertion" ADD CONSTRAINT "FK_tag_asrt_object_id" FOREIGN KEY ("object_id") REFERENCES "user_tag_idx" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "tag_assertion" ("object_id");
            ALTER TABLE "tag_assertion" ADD CONSTRAINT "FK_tag_asrt_prpt_id" FOREIGN KEY ("prpt_id") REFERENCES "tag_prpt" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "tag_assertion" ("prpt_id");
            ALTER TABLE "tag_assertion" ADD CONSTRAINT "FK_tag_asrt_subject_id" FOREIGN KEY ("subject_id") REFERENCES "user_tag_idx" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "tag_assertion" ("subject_id");
            ALTER TABLE "tag_assertion" ADD CONSTRAINT "FK_tag_asrt_user_id" FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "tag_assertion" ("user_id");
            ALTER TABLE "user_tag_idx" ADD CONSTRAINT "FK_user_tag_idx_1" FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "user_tag_idx" ("user_id");
            ALTER TABLE "user_tag_idx" ADD CONSTRAINT "FK_user_tag_idx_2" FOREIGN KEY ("tag_id") REFERENCES "tag" ("id") ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED;
            CREATE INDEX ON "user_tag_idx" ("tag_id");

            -- Sequences --
            CREATE SEQUENCE bookmark_id_seq;
            SELECT setval('bookmark_id_seq', max(id)) FROM bookmark;
            ALTER TABLE "bookmark" ALTER COLUMN "id" SET DEFAULT nextval('bookmark_id_seq');
            CREATE SEQUENCE bookmark_folder_id_seq;
            SELECT setval('bookmark_folder_id_seq', max(id)) FROM bookmark_folder;
            ALTER TABLE "bookmark_folder" ALTER COLUMN "id" SET DEFAULT nextval('bookmark_folder_id_seq');
            CREATE SEQUENCE bookmark_tag_idx_id_seq;
            SELECT setval('bookmark_tag_idx_id_seq', max(id)) FROM bookmark_tag_idx;
            ALTER TABLE "bookmark_tag_idx" ALTER COLUMN "id" SET DEFAULT nextval('bookmark_tag_idx_id_seq');
            CREATE SEQUENCE feed_folder_id_seq;
            SELECT setval('feed_folder_id_seq', max(id)) FROM feed_folder;
            ALTER TABLE "feed_folder" ALTER COLUMN "id" SET DEFAULT nextval('feed_folder_id_seq');
            CREATE SEQUENCE feed_subscription_id_seq;
            SELECT setval('feed_subscription_id_seq', max(id)) FROM feed_subscription;
            ALTER TABLE "feed_subscription" ALTER COLUMN "id" SET DEFAULT nextval('feed_subscription_id_seq');
            CREATE SEQUENCE folder_id_seq;
            SELECT setval('folder_id_seq', max(id)) FROM folder;
            ALTER TABLE "folder" ALTER COLUMN "id" SET DEFAULT nextval('folder_id_seq');
            CREATE SEQUENCE for_user_id_seq;
            SELECT setval('for_user_id_seq', max(id)) FROM for_user;
            ALTER TABLE "for_user" ALTER COLUMN "id" SET DEFAULT nextval('for_user_id_seq');
            CREATE SEQUENCE link_id_seq;
            SELECT setval('link_id_seq', max(id)) FROM link;
            ALTER TABLE "link" ALTER COLUMN "id" SET DEFAULT nextval('link_id_seq');
            CREATE SEQUENCE link_tag_idx_id_seq;
            SELECT setval('link_tag_idx_id_seq', max(id)) FROM link_tag_idx;
            ALTER TABLE "link_tag_idx" ALTER COLUMN "id" SET DEFAULT nextval('link_tag_idx_id_seq');
            CREATE SEQUENCE mime_type_admin_id_seq;
            SELECT setval('mime_type_admin_id_seq', max(id)) FROM mime_type_admin;
            ALTER TABLE "mime_type_admin" ALTER COLUMN "id" SET DEFAULT nextval('mime_type_admin_id_seq');
            CREATE SEQUENCE point_marker_id_seq;
            SELECT setval('point_marker_id_seq', max(id)) FROM point_marker;
            ALTER TABLE "point_marker" ALTER COLUMN "id" SET DEFAULT nextval('point_marker_id_seq');
            CREATE SEQUENCE tag_id_seq;
            SELECT setval('tag_id_seq', max(id)) FROM tag;
            ALTER TABLE "tag" ALTER COLUMN "id" SET DEFAULT nextval('tag_id_seq');
            CREATE SEQUENCE tag_assertion_id_seq;
            SELECT setval('tag_assertion_id_seq', max(id)) FROM tag_assertion;
            ALTER TABLE "tag_assertion" ALTER COLUMN "id" SET DEFAULT nextval('tag_assertion_id_seq');
            CREATE SEQUENCE tag_prpt_id_seq;
            SELECT setval('tag_prpt_id_seq', max(id)) FROM tag_prpt;
            ALTER TABLE "tag_prpt" ALTER COLUMN "id" SET DEFAULT nextval('tag_prpt_id_seq');
            CREATE SEQUENCE user_id_seq;
            SELECT setval('user_id_seq', max(id)) FROM user;
            ALTER TABLE "user" ALTER COLUMN "id" SET DEFAULT nextval('user_id_seq');
            CREATE SEQUENCE user_tag_idx_id_seq;
            SELECT setval('user_tag_idx_id_seq', max(id)) FROM user_tag_idx;
            ALTER TABLE "user_tag_idx" ALTER COLUMN "id" SET DEFAULT nextval('user_tag_idx_id_seq');

            -- Full Text keys --
            CREATE INDEX ON search_idx USING gin(to_tsvector('english', text));
            CREATE INDEX ON search_idx USING gin(to_tsvector('english', tags));

            COMMIT;

        </sql>
    </changeSet>

</databaseChangeLog>
